# Starter script
echo ""
fortune | cowsay | /Users/balldk/Tool/center.py | lolcat 

# ZSH zone
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export ZSH="$HOME/.oh-my-zsh"

# ZSH_THEME="powerlevel10k/powerlevel10k"
ZSH_THEME="mytheme"

plugins=(
    git
    zsh-autosuggestions
    fast-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

[ -f "/Users/balldk/.ghcup/env" ] && source "/Users/balldk/.ghcup/env" # ghcup-env

# ======= USER CONFIG ZONE ========
export PATH="$PATH:/Applications/Julia-1.6.app/Contents/Resources/julia/bin/"
export PATH="$PATH:/Users/balldk/Library/Python/3.8/bin"
export PATH="$PATH:/Users/balldk/Tool/flutter/bin"
export PATH="$PATH:/Users/balldk/Tool/cmdline-tools/bin"
export PATH="$PATH:/usr/local/mysql/bin"
export PATH="$PATH:/Users/balldk/Tool/bin"
export PATH="$PATH:/Users/balldk/Tool/v"
export PATH="$PATH:/Users/balldk/Tool/nvim/bin"
# export PATH="$PATH:/Applications/Julia-1.6.app/Contents/Resources/julia/bin/"
# export PATH="$PATH:/usr/local/texlive/2021/bin/universal-darwin"
PATH="/Applications/CMake.app/Contents/bin":"$PATH"
export PATH="$PATH:/opt/metasploit-framework/bin"

eval "$(zoxide init zsh)"
source ~/Tool/user_configs.zsh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/balldk/Tool/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/balldk/Tool/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/balldk/Tool/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/balldk/Tool/google-cloud-sdk/completion.zsh.inc'; fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

